version: '3.6'
services:
  mongodb:
    image: mongo
    container_name: "mongodb"
    restart: always
    ports:
      - '127.0.0.1:27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpass      
    volumes:
      - mongodb_data:/data/db
    networks:
      - mynetwork    

  elasticsearch:
    container_name: "elasticsearch"
    image: elasticsearch:7.17.10
    restart: always
    ports:
      - '127.0.0.1:9200:9200'
      - '127.0.0.1:9300:9300'
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3      
    networks:
      - mynetwork

  flask:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      -  '127.0.0.1:500:5001'
    depends_on:
      - mongodb
    environment:
      - MONGO_URI=mongodb://mongodb:27017/mydatabase  # URI for MongoDB connectivity

  telegraf:
    image: telegraf:1.18-alpine
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./var/run/docker.sock:/var/run/docker.sock # added this in order to take metrics from docker container
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '127.0.0.1:8125:8125/udp'
    networks:
      - mynetwork

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - mynetwork

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - mynetwork     
networks:
  mynetwork:
    driver: bridge
volumes:
  mongodb_data:
  elasticsearch_data:  
  influxdb_data: {}
  grafana_data: {}

